이벤트
	- 사용자가 하는 행위를 감지해서 등록된 기능을 하는 것
						(이벤트)	(이벤트 루프)	(이벤트 핸들러)
						
	console.dir(window)		-> on으로 시작하는 속성 -> 이벤트 종류	확인 가능
		클릭, 키보드, 마우스, 기타
		
	1) document 객체 모델의 on으로 시작하는 이벤트 속성에 이벤트 핸들러 함수를 대입
			- 마지막에 대입된 이벤트 핸들러만 동작
			
		document.getElementById('button').onclick = function() {
			alert('이벤트1');
		};
		
		document.getElementById('button').onclick = function() {
			alert('이벤트2');
		};
						--> 이벤트 2만 실행된다
						
						
	2) document 객체의 addEventListener
			- 등록한 모든 이벤트 핸들러가 동작
		
		addEventListener('이벤트명', 이벤트 핸들러, 캡쳐링 여부 - false);
		
		
		캡쳐링
			- 이벤트가 발생한 요소를 위에서 아래로 이동하면서 찾는 과정
			
		버블링
			- 이벤트가 발생하면 상위로 이동하면서 계속 등록된 이벤트 핸들러 실행
				ex) Box3 -> Box2 -> Box1
				
		캡쳐링 여부 - true 	-> 캡쳐링 단계에서 이벤트가 발생
		캡쳐링 여부 - false 	-> 버블링 단계에서 이벤트가 발생(기본값)
		
		
		이벤트 전파(이벤트가 상위요소, 하위요소로 이동하면서 실행)
		
			-> 이벤트 전파 취소 -> 이벤트 핸들러의 event 인수를 통해서 통제
				event.stopPropagation();
				
				
				setTimeout(function() {
					// 지연 실행 부분
				}, 1000);
				
				setInterval(function() {
				
				}, 1000);
			
			
			
		jQuery 이벤트
			1. 이벤트 명 -> 메서드 명
				$('선택자').click(이벤트 핸들러);
					console.dir(window) -> on으로 시작하는 속성 -> 이벤트명
					
			

			자주쓰는 이벤트

				1) 마우스 이벤트
						click() - 클릭
						dblclick() - 더블 클릭		모바일 (touch 이벤트)
						mouseout() - 자식 요소까지
						mouseover() - 자식 요소까지
					
						mouseenter() - 본인 요소만
						mouseleave()	- 본인 요소만
						
						mousedown() - 마우스 키를 누른 상태
						mouseup() - 마우스를 눌렀다가 뗄 때
						
						mousemove() - 마우스 커서가 움직일 때
						
						scroll() - 마우스 스크롤 휠을 움직일 때
					
				2) 포커스 이벤트
						focus() - 입력 항목에 커서가 가 있을 때
						blur() - 입력 항목에서 커서가 제거되었을 때
					
				3) 키보드 이벤트
						keypress() - 키를 누른 상태일 때 (계속 발생, 일부키 불가능)
						keydown() - 키를 누른 상태일 때 (1번만 발생, 모든키 가능)
						keyup() - 키를 눌렀다가 뗄 때 
						
				4) 기타
						resize() - 윈도우 창의 사이즈가 변경이 될 때
						change() - select로 선택을 하더나 file 선택을 했을 때 발생하는 이벤트
			
			

			2.바인드 메서드
				- on
					- 이벤트를 여러개 등록하는 경우
						
						1) 여러 이벤트에 동일 이벤트 핸들러 등록
							$(선택자).on('이벤트명 이벤트명 ...', 이벤트 핸들러)
							
						2) 여러 이벤트에 각각의 이벤트 핸들러 등록
							$(선택자).on({
								'이벤트 종류1': 이벤트 핸들러1,
								'이벤트 종류2': 이벤트 핸들러2
							});
							
				- live 이벤트
					동적으로 추가하는 요소 -> 이벤트 핸들러가 등록X
					이벤트 동작 X
						-> 이 부분을 동작하게 만들어주는 것이 live 이벤트 메서드(on)
						
					$('상위요소').on('이벤트명', '현재 요소', 이벤트 핸들러);	
					
					off - 이벤트 핸들러 제거
					$(선택자).off('이벤트명');